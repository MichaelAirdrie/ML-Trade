<br></br>
<h1 style="text-align: center;" data-mce-style="text-align: center;">Carleton University</h1><h1 style="text-align: center;" data-mce-style="text-align: center;">COMP 4905 Honors Project</h1><h1 style="text-align: center;" data-mce-style="text-align: center;">Machine Learning With The Stock Market</h1><h2 style="text-align: center;" data-mce-style="text-align: center;">December 17th 2021</h2><p style="text-align: right;" data-mce-style="text-align: right;">Name: Michael Airdrie</p><p style="text-align: right;" data-mce-style="text-align: right;">Supervisor: Dr. L.D. Nel</p><h3>Abstract</h3><p>In early 2021, I decided that I wanted to start investing money into the stock market. While learning to invest I was browsing YouTube and came across a market trading discipline known as technical analysis. This project's purpose was to see if it was possible to combine both technical analysis and machine learning in order to find the optimal technical analysis indicators for making price predictions in the market and creating a model to <em>hopefully</em> compete in the current market. The way I went about this was by understanding technical analysis and its associated strategies using price and volume. In the current state of this project, I used 4 different indicators as a way to decide whether or not to buy a stock at that given price. However, there are more that are to be quickly added in and tested as well. After using technical analysis to find out if you should buy the stock, I use future data as the test data to see if the indicator is working. I was able to determine that the RSI Indicator was the best predictor of future price movements on average. I was also able to determine that this idea of automating technical analysis is definitely worth exploring further.&nbsp;</p><p><span style="color: #4a86e8;" data-mce-style="color: #4a86e8;">Acknowledgements</span></p><p>I would like to thank Professor Lou Nel for guiding me through this project. There were a few times where I was a little lost and he helped me bring the project back on track. Thank you as well to my roommates, who listened to me talk about this project and provided general guidance throughout.</p>
<h3>Table of Contents</h3>
<p>Abstract …………………………………………………………………………………………... 2</p>
<p>Acknowledgements…………………………………………………………….……...…… 3</p>
<p>List of Figures………………………………………………………………………..........……5</p>
<p>Main Body………………………………………………………………………………….…….. 6</p>
<p>Author Introduction ………………………………………………………......…….......... 6</p>
<p>Motivation ……………………………………………………………………………........... 7-8</p>
<p>Methodology ………………………………………………………………………..…....... 9</p>
<p>API Implementation ………………………………………………………………........…10</p>
<p>Technical Analysis ………………………………………...…………………………..........11</p>
<p>Testing the Analysis ……………………………………………………………........….. 12</p>
<p>Technical Indicators ………………………………......………………………….……13-15</p>
<p>Results ………………………………………………………………....……………….…….16-17</p>
<p>Future Possibilities …………………………….....……………………………………. 18-19</p>
<p>Where You Can Find The App ………………………….....……………….………19</p>
<p>References …………………………………………………………………………………… 20</p>
<h3>List of Figures</h3>
<p>Figure 1: Database Schema ……………………………………......……….…………9</p>
<p>Figure 2: Main Stock Page …………………………………....…..….……….………10</p>
<p>Figure 3: Array of Indications..……………………....…..…………….…….………11</p>
<p>Figure 4: Candlestick …………………………………………………....…..…...………14</p>
<p>Figure 5: Moving Average And RSI ……………………..….……..………………15</p>
<p>Figure 6: Indicator Analysis …………………………………..….…...………………16</p>
<h2>Main body</h2>
<p><span style="color: #4a86e8;" data-mce-style="color: #4a86e8;">Author Introduction</span></p><p>A few years ago during my first year of undergrad I began watching videos on youtube about artificial intelligence and machine learning. The topic fascinated me and I ended up really enjoying other media on the subject as well, such as sci-fi movies and documentaries like Alpha-Go. The idea of creating something that learns for itself was exciting to me, and also on the edge of technological progress. Although, when starting this project I did not have any experience actually developing these machine learning models, the research and coursework I did during my time working on this project has given me a solid grasp on the subject matter. I hope to share my progress in this report as well as show what’s possible for this application in the future.</p><p>Another reason I wanted to explore machine learning was because It allowed me to step into a domain that I had very little experience with, which I find very exciting. Machine learning and data science are both very interesting and fruitful careers in the current job market, which gives me a leg up when trying to find a job in the field or perhaps create my own. This project has also given me a ton of hands-on experience with developing an application and the underlying mechanisms that make everything run smoothly.</p><h2>Motivation</h2><p>This part of the paper will briefly go over my motivations to investigate Technical Analysis as well as Machine Learning and creating an application to combine both.</p><p>The stock market has always been interesting to me. Pursuing a minor in economics has given me the tools I need to understand market analysis, allowing me to utilize it in code. However, technical analysis is a rather difficult topic to find academic literature on. I wanted to build something to put the theory of technical analysis to the test, and see if I can investigate whether or not it can beat the market, and if so, find the best way to do so using machine learning. Ideally I could turn this into something people could use to test their own specific technical analysis strategy, as there are almost an infinite number of combinations out there.&nbsp;</p><p>I want to put the power of technical analysis into the hands of everyday investors that don’t want to spend hundreds of hours learning the ins and outs of technical analysis. In addition, I want professionals in the technical analysis field to be able to test their hypotheses by using machine learning instead of going through hundreds of charts manually. The overall utility provided to both groups could be very high, which is a major motivator for me.</p><p>For example, people could test whether or not using the 20 period moving average alongside the RSI indicator together is an effective way to predict price changes in the market. Or perhaps find out if specific areas of Support and Resistance determined by fibonacci retracement on candlestick charts combined with an upward trend in the market using linear regression can give you a good time to buy or sell stock. The exciting part is that you don’t have to buy the stock and you can test the different indicators and their reliability on any stock available on the API, during any time period, and also see which indicators are best at predicting positive price changes and which are the worst.&nbsp;</p><p>Another thing to note is that if an indicator is wrong about a price change consistently, that isn’t a bad thing at all, in fact, that means instead of buying the stock you’ve found an indicator that shows a great time to sell the stock. Which in the investing world is almost as valuable, as long as you’re one of the first to find out.&nbsp;</p><p>These terms probably don’t make much sense to you right now, however, throughout this paper you will understand four of the different indicators and how they are used.&nbsp;</p><h2>Methodology</h2><p><span style="color: #4a86e8;" data-mce-style="color: #4a86e8;">Database</span></p><p>One feature that I wanted to implement for this application was the ability for people to make dummy trades on the stock market and create their own portfolios. I began working on this as the first step so that I could then store the different portfolios in a database. I would then allow for people to run their machine learning and technical analysis algorithms on the different stocks in their portfolios. I quickly realized however that my little experience with nodeJS and server to client architecture was becoming a detriment given the time constraints. As a response to this, after implementing the barebone scaffolding code for a database with user and portfolio storage, I spoke with my supervisor and decided it would be best if I switched my focus to the more theoretical side of the project.</p><p style="text-align: center;" data-mce-style="text-align: center;">

<img src="resources/database_schema.jpg" alt="Database Schema"><br></br>
<em>Figure 1: Database Schema</em></p><h2>API Implementation</h2><p>The theoretical side of the project had two main goals. The first being to somehow implement a way for the user to analyze stock market data using technical analysis indicators, which I believe I have done successfully. In addition to this, I wanted the data provided by the analysis to be easily transmuted into the Features and Labels commonly used in machine learning algorithms, which I believe I have done as well. I would have liked to have implemented an example machine learning algorithm on this transmuted data, however the time constraints prevented me from doing so. That being said, I plan to continue with this project long after it is submitted.</p><p>The approach I took to making the data meaningful starts with the raw data. I first followed a tutorial online that connected to a stock API and displayed the results on a webpage using handlebars as a templating language. This allowed me to implement the webpage below rather quickly, where the basic functionality of looking up the information about a specific stock for the last day.&nbsp;</p><p style="text-align: center;" data-mce-style="text-align: center;">

<img src="resources/main_stock_page.jpg" alt="Main Stock Page"><br></br>
Figure 2: Main Stock Page</p><h2>Technical Analysis</h2><p>I then needed to get a series of data in order to run analysis on, as you cannot run trend analysis on one data point. I added a new webpage that allowed for the user to make an API call to get a list of JSON objects containing the information for each day of a given year, in this case the default was 2020. I then parse this data to extract different information depending on the technical indicator, the primary fields for the four technical indicators I implemented being “open”, “close”, “high”and “low” for a given stock.&nbsp;</p><p>I then put the different technical indicators I had researched into code. The output of this code is an array with very simple output: the number 1 is placed at the data index where the indicator suggests to buy the stock, the number -1 is placed at the data index where the indicator suggests to sell the stock and the number 0 is placed at the data index where the indicator is indifferent. Each technical indicator has its own array with either 1, -1 or 0. The figure below shows what the matrixes look like for Google’s 2020 data.</p><p style="text-align: center;" data-mce-style="text-align: center;">

<img src="resources/array_of_indicators.jpg" alt="Array of Indications"><br></br>
<em>Figure 3: Array of Indications</em></p><h2>Testing The Analysis</h2><p>After turning the data into useful arrays, it is time to test whether or not these indicators were accurately predicting changes in price. In order to do this, I added a periodsIntoFuture variable that is simply an integer that determines how far into future data to look to test if the indicator was correct. The default for this is 1, as in the next day, to look at the closing price of the following day to detect price changes.&nbsp;</p><p>Given that the price goes in the direction the indicator predicted, a win is recorded in a dataset along with the amount of the win. The amount of the win being the percentage change in the direction predicted. Given that the price goes in the opposite direction of what the indicator predicted, it is recorded as a loss along with the amount of the loss.</p><p>These values are then displayed to the user along with their corresponding indicator. This allows for the user to see exactly how each technical indicator performed compared to one another. In later versions of the app, I want to make the interface much more appealing to the eye for the user, but for now this gives the information you need.&nbsp;</p><h2>Technical Indicators</h2><p><strong>Candlestick Patterns</strong> are used in technical analysis as a way to illustrate the open, close, low and high of a certain day. The high being the highest price the stock reached in a given day, the low being the lowest. The open being what the price was first traded at right at market open (usually 9:30AM for most exchanges), the close being the last trade that happened before market close (usually 4:30PM for most exchanges). However, These candlesticks can be used for any time period you like, could be an hour time period, a week or even ten minutes. This means that all of the indicators we are testing may work for different timeframes that aren’t implemented here, such as a ten minute time frame. This is something I would like to implement into the application as well, allowing for people to test their strategies on any different timeframes they want.&nbsp;</p><p>These candlesticks are used in several different technical analysis indicators to determine whether or not the market has support or resistance at certain price levels. In theory, this can be used as a way to predict future price movements. The below candlestick is indicating a resistance point, as buyers have tried to push the price above this price during the day, and sellers have moved it all the way back down to the closing price. The technical analysis indicator called fibonacci retracement is used to predict rallies and pullbacks. (you want to sell on rallies in a downtrend and buy on pullbacks in an uptrend). This indicator is one of the 4 that I will be using for my machine learning algorithm.</p><p style="text-align: center;" data-mce-style="text-align: center;">

<img src="resources/candlectick.jpg" alt="Candlestick"><br></br>
<em>Figure 4: Candlestick</em></p><p>The <strong>Rate of Change (ROC)</strong> is another indicator I will be using in my experiment. This indicator is useful to see trends in the market and trade accordingly. The idea behind this indicator is quite simple, you want to buy when there is a positive ROC and sell when it’s negative. This indicator is the easiest to understand and will be useful as a baseline to compare other indicators.&nbsp;</p><p>The <strong>RSI indicator</strong> is a momentum indicator that tells the trader whether or not a stock is overbought or oversold. In the below chart you can see that this indicator would have done well if followed, as whenever the stock was overbought, it would have been a good time to exit the market briefly and when it was oversold, the price quickly rose afterwards. The RSI indicator can also be used to calculate a trailing stop in some scenarios. A trailing stop is a price level set by the investor where they want to sell their stock. This can be used to limit losses or take profits at a certain price level, which is extremely useful. I believe this can also be implemented into the application with more study into technical analysis.</p><p>The below chart also shows the trader the <strong>twenty period moving average</strong>, which is the fourth indicator we are using to predict future price movements. The moving average is indicated by the red line moving through the chart. The twenty period moving average can have several different uses. The first of which is identifying trends, which is important as you want to purchase stocks that are trending upward and sell stocks that are trending downward. It is theorized that when a stock is in an uptrend and falls back to its twenty period moving average, this is a sign that if the trend continues, it will pop back out towards higher highs within a given timeframe. There are other uses for the twenty period moving average but for this experiment we will be only using this use case.&nbsp;</p><p style="text-align: center;" data-mce-style="text-align: center;">

<img src="resources/moving_average_and_rsi.jpg" alt="Moving Average And RSI"><br></br>
<em>Figure 5: Moving Average And RSI [Hart, 2021]</em></p><h2>Results</h2><p>The primary results of this project were first and foremost everything I’ve learned about application development and machine learning. I was able to teach myself how to implement a database into a web app, connect to an API, use a templating language, use cookies in a web browser and host apps on third party providers such as Heroku. In addition to this, I now have a firm grasp on what needs to be in place to analyse data and derive useful information from it. This is shown by my intriguing results and future possibilities of this type of analysis and application.&nbsp;</p><p>At the current time, I have implemented a way for people to pick a stock of their choosing and run 4 technical analysis indicators on that stock's data for the year 2020. This analysis reports how many times the indicator was correct for the given year, alongside the magnitude in which it was correct (average change in price). “Correct” meaning if you made trades using this indicator and looked at the price the following day, you could see how many times it was correct and by how much, as well as how many times it was wrong and by how much. You can see this is the case from the following chart that each indicator is either right or wrong by a certain amount.&nbsp;</p><p style="text-align: center;" data-mce-style="text-align: center;">

<img src="resources/indicator_analysis.jpg" alt="Indicator Analysis"><br></br>
<em>Figure 6: Indicator Analysis</em></p><p>This was an analysis done on google’s stock price for the year 2020. It shows that different indicators had different predictions for price changes, and some indicators performed much better than others. For example in the case of google in 2020, if you used the RSI indicator as a way to trade for that year, you would have made about 3.3% on each trade, and you would have lost 4.06% on one 1 trade meaning you would have made about 27% on your money. This analysis can be done for any stock the user chooses that is listed on the API.&nbsp;</p><p>Having the data organized this way makes for machine learning algorithms to easily see which indicators are working and which indicators are not. The information is saved in a way that makes it so that a machine learning algorithm can combine technical indicators by looking at specific indices in the arrays and finding out what combination of technical indicators best predicts price changes in the market.&nbsp;</p><p>Something interesting I did find is that the RSI indicator seems to be the most reliable indicator of the four for predicting price change. As seen above it did a good job of predicting price changes in Google's stock, but it also predicted Microsoft and Apple's stock to a good degree as well, making profits on both. This leads me to believe that it is absolutely possible that technical analysis can potentially beat the market, considering this is one technical indicator by itself being used, when optimally there would be several being used in conjunction.&nbsp;</p><h2>Future Possibilities&nbsp;</h2><p>This section is going to be quite lengthy, as I believe the future uses for an application such as this are quite extensive and can be very useful. I also feel as though, unfortunately, most of this project was laying the groundwork for the more interesting part of the application. Regardless I think that speculating on future possibilities can give insight into how much I’ve learned working on the project.&nbsp;</p><p><span style="color: #4a86e8;" data-mce-style="color: #4a86e8;">Indicator Changes</span></p><p>The first thing to implement would be a way for users to select the different indicators they want to test together. For example testing both the <strong>Moving Average indicator</strong> and the <strong>RSI indicator </strong>together to see if they can be more accurate than either of them individually. This would be the prerequisite for the process of combining technical factors inside a machine learning model. This would involve finding a point in the data where both of these indicators have a 1 or both these indicators have a -1 in the array.&nbsp;</p><p>The creation of more indicators would be the second addition. There are hundreds of indicators already in use by traders that should be added into the application. This will allow for a ton of new combinations as well, as the more that get added, the more creative the user can be in combining them.&nbsp;</p><p><span style="color: #4a86e8;" data-mce-style="color: #4a86e8;">Quality of Life Changes</span></p><p>I would like to implement a slider for how far into the future you are looking to test. This would allow for even more variables for the machine learning portion to manipulate to find the optimal combination of both indicators and time to look in the future. I would like to implement a better visual representation of the data as well. Having the data displayed as an array on the web page is a little archaic. Allowing for the user to select what years of data they want to run an analysis on would also be a good improvement. This would allow the user to analyze more than one year at time, leading to larger sample sizes and more accurate analysis as a result. I would also like to add documentation to each of the indicators so that users can learn what they do, and have a better idea of what their specific trading strategy is actually doing.&nbsp;</p><p><span style="color: #4a86e8;" data-mce-style="color: #4a86e8;">Future Machine Learning</span></p><p>Implement a way to compare success rates across all of your indicators and find out which ones show the most significant price changes. Change the weight of that specific indicator to be higher the more times it is right, and lower the more times it is wrong. This can be useful to find the most useful indicator on its own, but also find any combination of indicators that work really well when used together. Perhaps when both the RSI indicator and the moving average indicator are predicting positive price changes, they are right much more compared to when the two are separated individually. This is something I predict will happen, as it is common for people to use multiple technical factors when doing market analysis.</p><p>In addition to this, allow users to save their ratios for different indicators, essentially saving the culmination of past analysis into a bite sized portion on the database. This would allow for the sharing of strategies amongst users.&nbsp;</p><p><span style="color: #4a86e8;" data-mce-style="color: #4a86e8;">Where You Can Access The App:</span></p><p><a target="_blank" href="https://ma-stock-lookup.herokuapp.com/" rel="noopener" data-mce-href="https://ma-stock-lookup.herokuapp.com/">https://ma-stock-lookup.herokuapp.com/</a></p><p><span style="color: #4a86e8;" data-mce-style="color: #4a86e8;">GitHub repository:</span></p><p><a target="_blank" href="https://github.com/MichaelAirdrie/ML-Trade" rel="noopener" data-mce-href="https://github.com/MichaelAirdrie/ML-Trade">https://github.com/MichaelAirdrie/ML-Trade</a></p><h2>References</h2><p>John Elder | Build a Stock Market Web App With Node&nbsp;</p><p><a target="_blank" href="https://codemy.com/build-stock-market-web-app-node/" rel="noopener" data-mce-href="https://codemy.com/build-stock-market-web-app-node/">https://codemy.com/build-stock-market-web-app-node/</a></p><p>Steven Hart | The Only Technical Analysis Video You Will Ever Need...</p><p><a target="_blank" href="https://www.youtube.com/watch?v=eynxyoKgpng&amp;ab_channel=TheTradingChannel" rel="noopener" data-mce-href="https://www.youtube.com/watch?v=eynxyoKgpng&amp;ab_channel=TheTradingChannel">https://www.youtube.com/watch?v=eynxyoKgpng&amp;ab_channel=TheTradingChannel</a></p><p>Stephen Grider | Machine Learning With JavaScript</p><p><a target="_blank" href="https://www.udemy.com/course/machine-learning-with-javascript/" rel="noopener" data-mce-href="https://www.udemy.com/course/machine-learning-with-javascript/">https://www.udemy.com/course/machine-learning-with-javascript/</a></p>